#!/usr/bin/env ruby

REPO_URL='../../commit/'

def git_repository?
  initialized = `git rev-parse --is-inside-work-tree`.chomp

  if initialized != 'true'
    initialized = false
    puts 'Exiting. Nothing to create log file.'
  end
  initialized
end

def write_file(output)

  file_name='CHANGELOG.md'

  if ARGV.length > 0
    file_name=ARGV[0]
  end

  begin
    file = File.open(file_name, 'w')
    file.puts output

    puts "Create #{file_name}"
  rescue IOError => e
    #some error occur, dir not writable etc.
  ensure
    file.close unless file == nil
  end
end

def parse_change_log

  output = []

  tags=`git for-each-ref --sort='*authordate' --format='%(tag)' refs/tags | grep -v '^$'`

  tags = tags.split

  tags.reverse!

  output << "\n#### [Current]"

  previous_tag=''
  tags.each do |tag|
    current_tag = tag

    unless previous_tag.empty?
      output << "\n#### #{previous_tag}"
    end

    output << `git log --pretty=format:" * [%h](#{REPO_URL}%h) %s __(%an)__" "#{current_tag}".."#{previous_tag}" | grep -v "Merge branch "`

    previous_tag = current_tag
  end

  output << "\n#### #{previous_tag}"
  output << `git log --pretty=format:" * [%h](#{REPO_URL}%h) %s __(%an)__" #{previous_tag} | grep -v "Merge branch "`

  output
end

if git_repository?
  write_file parse_change_log
end

